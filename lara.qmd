---
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages

library(tidyverse)
library(RColorBrewer)
library(plotly) 
library(ggplot2)
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, error=F, warning=F)
library(tidyverse) # CSV file I/O, e.g. the read_csv function
library(RColorBrewer)
library(plotly) 

#theme
my_theme <- function(base_size = 12, base_family = "Helvetica"){
    theme_minimal() +
    theme(axis.title.y = element_blank(),axis.title.x = element_blank(),
    plot.title = element_text(face="bold", size=16),
    axis.text = element_blank(),
    plot.background = element_rect(fill = 'ghostwhite',color='white'),
    panel.grid = element_blank(),
    legend.position = 'None', legend.title = element_blank())
}

```

This code seeks to generate Piet Mondrian style painting in his Paris period and NYC period

A typical painting of his contains lines, segments and area to achieve 'the rhythm of relations of color and size'.

Fill area between lines and segment is the main challenge

## Generate random data

```{r input}
df=data.frame(x=c(1,3,2,5),y=c(3,8,7,1))
df_add <- data.frame(z=c(2,5,2,3,1,5,6,7,7.5)) %>% 
    mutate(color = sample(3, nrow(.), replace=T))
```

```{r}
find_small_squares <- function(df, n) {
  df_x <- df%>% arrange(x) %>%
    mutate(x_lead=lead(x,1), x_gap = x_lead-x) %>%
    arrange(x_gap) %>%
    head(n) %>% 
    select(x, x_lead)
  
  df_y <- df%>% arrange(y) %>%
    mutate(y_lead=lead(y,1), y_gap = y_lead-y) %>%
    arrange(y_gap) %>%
    head(n) %>% 
    select(y, y_lead)
  
  df_rect <- df_x %>% 
    cbind(df_y) %>% 
    mutate(color = sample(3, nrow(.), replace=T))

  #to ensure no NA datapoint in df_rect, need to make sure n<nrow(df)  
  return(df_rect)
}
```

## paris period

```{r paris}
pal <- c("#255293","#db0a16","#f8c72d")
set.seed(1)


#df=data.frame(x=c(1,2.8,8,9.2,10),y=c(4.5,6.5,0,0,0))
x_values = data.frame(x = c(1,2.8,8,9.2,10))
y_values=data.frame(y = c(4, 5, 7))

#df_rect <- find_small_squares(df, 3)

df |>
  ggplot()+
  geom_vline(xintercept = x_values$x, size=3)+
  geom_hline(yintercept = y_values$y, size=3) + 
  coord_cartesian(xlim = c(0,10), ylim = c(0,10))+
  #geom_segment(data=df_add, aes(y=df_add$z, yend=df_add$z,
  #                              x=sample(df$x, nrow(df_add), replace=T),
  #                              xend=sample(df$x, nrow(df_add), replace=T)),
  #             size=5) +
  #geom_rect(data = df_rect, aes(xmin=x +.045,
  #                            xmax=x_lead -.045,
  #                            ymin=y + .065,
  #                            ymax=y_lead - .065,
  #          fill=as.factor(color))) +
  #scale_fill_manual(values=pal)+
  my_theme() 

```

## New York period

```{r}
pal <- c("#255293","#db0a16","ghostwhite")
df <- data.frame(replicate(2,sample(0:18,7)))
colnames(df) <- c("x","y")
df_rect <- find_small_squares(df, nrow(df)-3)
df_add <- data.frame(z=sample(0:18,16)) %>% 
    mutate(color = sample(3, nrow(.), replace=T))

set.seed(1023)
df %>% 
  ggplot()+
  geom_vline(xintercept = df$x, size=5, color='#f8c72d')+
  geom_hline(yintercept = df$y, size=5, color='#f8c72d') + 
  geom_segment(data=df_add, aes(y=df_add$z, yend=df_add$z,
                                x=sample(df$x,nrow(df_add), replace=T),
                                xend=sample(df$x,nrow(df_add), replace=T)),
               size=5, color='#f8c72d') +
  geom_rect(data = df_rect, aes(xmin=x +.2,
                              xmax=x_lead -.2,
                              ymin=y + .065,
                              ymax=y_lead - .065,
            fill=as.factor(color))) +

  geom_rect(data = df_rect, aes(xmin=x +.045 + (x_lead-x)/3,
                              xmax=x_lead -.045 - (x_lead-x)/3,
                              ymin=y + .065 + (y_lead-y)/3,
                              ymax=y_lead - .065 - (y_lead-y)/3,
            fill=as.factor(lead(color,1)))) +
  geom_point(aes(x=df$x ,y=df$y, 
             color = as.factor(sample(3, nrow(df), replace=T))), shape=15, size=4)+
  geom_point(data=df_add, aes(x=sample(df$x,nrow(df_add), replace=T),y=df_add$z, 
             color=as.factor(color)), shape=15, size=4) +
  geom_point(data=df_add, aes(y=sample(df$y,nrow(df_add), replace=T),x=df_add$z, 
             color=as.factor(color)), shape=15, size=4) +
  scale_fill_manual(values=pal)+
  scale_color_manual(values=pal)+
  my_theme()
```
