---
title: "Mondrian Art üé® üñåÔ∏è"
format: 
  dashboard:
    nav-buttons: [github]
    github: https://github.com/vizdata-s24/project-2-plot_twisters
logo: images/clipboard-1900000438.png
fig-width: 10
fig-asp: 0.3
params:
  today: "2024-5-01"
---

```{r}
#| label: load-packages
#| message: false
#| include: false
library(ggplot2)
library(gganimate)
library(tidyverse)

theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
```


```{r}
#| label: set-inputs
#| include: false
today <- as.Date(params$today)

my_theme <- function(base_size = 12, base_family = "Helvetica"){
    theme_minimal() +
    theme(axis.title.y = element_blank(),axis.title.x = element_blank(),
    plot.title = element_text(face="bold", size=16),
    axis.text = element_blank(),
    plot.background = element_rect(fill = 'ghostwhite',color='white'),
    panel.grid = element_blank(),
    legend.position = 'None', legend.title = element_blank())
}


```

#  {.sidebar}

This dashboard displays Piet Mondrian's Art:

Our project is linked here:
https://github.com/vizdata-s24/project-2-plot_twisters

<br>


## Row {height="40%"}

### Column {width="40%"}

```{r}
#| title: Sophie



rectangles = data.frame(
  xmin = c(2.5, -0.5, 9), 
  xmax = c(10.5, 2.5, 10.5), 
  ymin = c(3, -0.5, -0.5), 
  ymax = c(10.5, 3, 1.25),
  color = c("red", "blue", "yellow")
)


x_values = data.frame(x = c(2.5))
y_values = data.frame(y = c(3))

half_lines_horizontal = data.frame(
  x_start = c(-0.5, 9), 
  x_end = c(2.5, 10.5), 
  y = c(7, 1.25)
)

half_lines_vertical = data.frame(
  x = 9,             
  y_start = -0.5,       
  y_end = 3          
)

  ggplot() +
  geom_rect(data = rectangles, aes(xmin = xmin, xmax = xmax, ymin = ymin, 
                                   ymax = ymax, fill = as.factor(color))) +
  geom_vline(xintercept = x_values$x, linewidth = 4) +
  geom_hline(yintercept = y_values$y, linewidth = 4) + 
  coord_cartesian(xlim = c(0, 10), ylim = c(0, 10)) +
  geom_segment(data = half_lines_horizontal, aes(x = x_start, xend = x_end, y = y),
               linewidth = 4) +
  geom_segment(data = half_lines_vertical, aes(x = x, y = y_start, xend = x, 
                                               yend = y_end), linewidth = 4) +
  scale_fill_manual(values = c("blue" = "#255293", "red" = "#db0a16", 
                               "yellow" = "#E8B600")) +
  my_theme()
```

### Column {width="40%"}

```{r}
#| title: Lara

df = data.frame(
  x = c(3, 8, 8.2, 10),
  y = c(0, 0, 0, 0))

x_values = data.frame(x = c(1, 2.8, 8, 9.2, 10))
y_values = data.frame(y = c(4, 5, 7))

half_lines = data.frame(
  x_start = c(2.8, 2.8, 1, 2.8),
  x_end = c(8, 8, 9.2, 10),
  y = c(10, 7.8, 4.5, 0))

rectangles = data.frame(
  xmin = c(-0.5, -0.5, -0.5, 5.5, 8, 10),
  xmax = c(1, 1, 1, 6, 10, 10.5),
  ymin = c(7.8, 4, 2.8, -0.5, -0.5, 5),
  ymax = c(11, 5, 3.5, 0, 0, 7),
  color = c("blue", "yellow", "red", "red", "yellow", "red"))

df |>
  ggplot()+
  geom_rect(data = rectangles, aes(xmin = xmin,
                              xmax = xmax, 
                              ymin = ymin,
                              ymax =ymax,
            fill=as.factor(color))) +
  geom_vline(xintercept = x_values$x, linewidth = 3)+
  geom_hline(yintercept = y_values$y, linewidth = 3) + 
  coord_cartesian(xlim = c(0,10), ylim = c(0,10))+
  geom_segment(data = half_lines, aes(x = x_start, xend = x_end, y = y), linewidth = 3)+
  annotate(geom = "segment", 
           y = 7.8, 
           x = -0.5, 
           xend = 1,
           linewidth = 5)+
  scale_fill_manual(values = c("blue" = "#255293","red" = "#db0a16", "yellow" = "yellow"))+
  my_theme() 


```

## Row {height="40%"}

### Column {width="40%"}

```{r}
#| title: Tahsin

rectangles <- data.frame(
  xmin = c(-0.5, 6),
  xmax = c(1, 7.5),
  ymin = c(7.5, .5),
  ymax = c(13, 2),
  color = c("#E8B600", "#CC0000")
)

vertical_lines <- data.frame(
  x = c(1, 2.5, 3.5, 4, 6, 7.5, 8, 9.7)
)

horizontal_lines <- data.frame(
  y = c(2, 4, 6, 7.5)
)

additional_segments <- data.frame(
  x_start = c(1.05, 2.6, 6, 6, 9.75),
  x_end = c(3.95, 3.39, 8, 8, 10.05),
  y = c(0.25, 0, 0.4, -0.25, 0.3),
  color = c("#1B6FAA", "white", "black", "black", "#CC0000")
)

ggplot() +
  geom_rect(data = rectangles, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = color)) +
  scale_fill_identity() +
  geom_vline(data = vertical_lines, aes(xintercept = x), color = "black", size = 2) +
  geom_hline(data = horizontal_lines, aes(yintercept = y), color = "black", size = 4) +
  geom_segment(data = additional_segments, aes(x = x_start, xend = x_end, y = y, yend = y, color = color), size = 3) +
  scale_color_identity() +
  coord_cartesian(xlim = c(0, 10), ylim = c(0, 10)) +
  my_theme()
```

### Column {width="40%"}


# Forecast



## Row {height="20%"}




## Row {height="40%"}

### Column {width="40%"}



### Column {width="40%"}



## Row {height="40%"}

### Column {width="40%"}



### Column {width="40%"}


# Historical


## Row {height="20%"}




## Row {height="40%"}

### Column {width="40%"}



### Column {width="40%"}

## Row {height="40%"}

### Column {width="40%"}


### Column {width="40%"}


# Data

## Row {height="40%"}



## Row {height="60%"}

